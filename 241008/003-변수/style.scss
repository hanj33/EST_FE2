//색상
$red: #ee4444;
$black: #222;
$bg-color: #3e5e9e;
$link-color: red;
$p-color: #282a36;

//폰트사이즈
$font-p: 13px;
$font-h1: 28px;

//폰트
$base-font: "Noto Sans KR", sans-serif;

@debug "폰트사이즈는 #{$font-p}";

body {
  background-color: $bg-color;
  font-size: $font-p;
  font-family: $base-font;
}

h1 {
  font-size: $font-h1;
  color: $black;
}

p {
  font-size: $font-p;
  color: $black;
}

$font-size: 10px 12px 16px; //폰트사이즈 리스트
$image-file: photo_01, photo_02, photo_03; //이미지 파일명 리스트

// 아래와 같이 사용합니다.
.test1 {
  //   font-size: nth($list: $font-size, $n: 2);
  font-size: nth($font-size, 2); // 이렇게 써도 됨
}

.test2 {
  background-image: url(nth($image-file, -1) + ".png") no-repeat;
}

//sass 공식문서
$font-weights: (
  "regular": 400,
  "medium": 500,
  "bold": 700,
); //글자 굵기 리스트

//아래와 같은 형태로 사용
@debug #{map-get($font-weights, "medium")}; // 500
@debug #{map-get($font-weights, "extra-bold")}; // null

.test1 {
  font-weight: map-get($font-weights, "medium"); // 500
}

// 리스트에 값을 추가하고 싶어
// append
$numbers: 1px 2px 3px;
$new-numbers: append($numbers, 4px); // $numbers에 4px이라는 데이터를 추가해줘
// append는 추가할 값이 들어간 새로운 리스트를 다시 뽑아내는 거라서
// 새로 변수...? 만들어줘야 함

@debug #{$numbers};
@debug #{$new-numbers};

// 몇 번째인지 찾아보자
@debug #{index($new-numbers, 2px)};

// 길이를 알아보자
@debug #{length($numbers)};

$list1: 1px 2px;
$list2: 2px 3px 4px;

// $joinedList: join($list1, $list2);
// 엥 근데 저는 중간중간 반점 넣고 싶어요
$joinedList: join($list1, $list2, comma); // 이렇게 넣으면 됨

@debug #{$joinedList};

// 맵
$colors: (
  mainColor: red,
  secondColor: green,
  thirdColor: blue,
);

$keys: map-keys($colors);
$values: map-values($colors);
$values2: map-has-key($colors, mainColor);

@debug #{$keys};
@debug $values2;

//맵 리무브..(지우기)
$remove-colors: map-remove($colors, mainColor);

@debug $remove-colors;

//맵 머지(합치기)
$colors3: map-merge(
  $colors,
  (
    danger: pink,
  )
);
@debug $colors3;

.info {
  $line-normal: 1.34; // 지역변수
  font-size: 15px;
  line-height: $line-normal;
  text-align: right;
  span {
    line-height: $line-normal;
  }
}
@debug $line-normal;
